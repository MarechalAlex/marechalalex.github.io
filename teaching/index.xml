<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Enseignement on Alexandre Maréchal</title>
    <link>http://alexmarechal.com/teaching/</link>
    <description>Recent content in Enseignement on Alexandre Maréchal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://alexmarechal.com/teaching/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://alexmarechal.com/teaching/java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://alexmarechal.com/teaching/java/</guid>
      <description>L&amp;rsquo;apprentissage des principales notions de Programmation Orientée Objet (POO), ainsi que leur mise en pratique avec le langage Java.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Classes et objets, principe d&amp;rsquo;encapsulation&lt;/li&gt;
&lt;li&gt;Héritage et polymorphisme, abstraction, interfaces&lt;/li&gt;
&lt;li&gt;Utilisation d&amp;rsquo;exceptions&lt;/li&gt;
&lt;li&gt;Interfaces graphiques en Swing&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://alexmarechal.com/teaching/ocaml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://alexmarechal.com/teaching/ocaml/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Types simples, produit, somme ; vérification et inférence de type&lt;/li&gt;
&lt;li&gt;Fonctions : spécification, réalisation&lt;/li&gt;
&lt;li&gt;Composition fonctionnelle et conditionnelle ; analyse descendante, analyse par cas&lt;/li&gt;
&lt;li&gt;Définitions récursives de types et de fonctions ; analyse récurrente, équations récursives, modèles d&amp;rsquo;analyse&lt;/li&gt;
&lt;li&gt;Constructeurs de types complexes : naturels de Peano, séquences, arbres binaires, &amp;hellip;&lt;/li&gt;
&lt;li&gt;Ordre supérieur : introduction, lambda-notation, fonctions anonymes, description de schémas de programmes&lt;/li&gt;
&lt;li&gt;Expérimentation sur machine : langage : Ocaml ; exploitation des informations fournies par l&amp;rsquo;interprète du langage (messages d&amp;rsquo;erreurs, vérification et inférence de type) ; problématique de test et de mise au point des programmes : observation de traces d&amp;rsquo;exécution.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>